# Math-Leetcode
# Pow(x,n)
# Problem - 50

class Solution {
    public double myPow(double x, int n) {
       if(n<0)
       {
           return negPow(x,n);
       }
       else
       {
           return posPow(x,n);
       }
    }
        
    public double posPow(double x,int n)
    {
         
        if(n==0)
        {
            return 1;
        }
        double ans = myPow(x,n/2);
        if(n%2==0)
        {
            return ans*ans;
        }
        else
        {
            return x*ans*ans;
        }
    }
    
    public double negPow(double x,int n)
    {
         
        if(n==-1)
        {
            return 1/x;
        }
        double ans = myPow(x,n/2);
        if(n%2==0)
        {
            return ans*ans;
        }
        else
        {
            return 1/x*ans*ans;
        }
    }
}
